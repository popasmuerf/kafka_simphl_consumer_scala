group 'io.thirdplanet'
version '1.0-SNAPSHOT'
/**
 * Info on building fat jars...
 * because this stuff is easy to forget how
 * to do if you are using frameworks to
 * build your JVM executables.....
 * http://www.jasondl.ee/posts/2013/building-fat-jars-with-gradle.html
 * http://www.mkyong.com/gradle/gradle-create-a-jar-file-with-dependencies/
 *
 * Remember...escpecially with Scala...you have to include all dependencies...
 * into a fat jar...
 */



task wrapper(type: Wrapper) {
    gradleVersion = '3.3'
    distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}


apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'idea'


sourceCompatibility = 1.8
def scalaVersion ='2.11.8'
repositories {
    mavenCentral()
    jcenter()
    flatDir{
        dirs '/Users/mdb/src_jars'
    }
}

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.5'
    compile "org.scala-lang:scala-library:"+scalaVersion
    compile "org.scala-lang:scala-reflect:"+scalaVersion
    compile "org.scala-lang:scala-compiler:"+scalaVersion
    compile group: 'org.apache.kafka', name: 'kafka-clients', version: '0.11.0.0'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.1'
    compile group: 'com.google.guava', name: 'guava', version: '23.0'
    compile group: 'io.spray', name: 'spray-json_2.11', version: '1.3.3'
    compile name: 'mdtsdb-client-1.0.8-SNAPSHOT'
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

task run(type:JavaExec,dependsOn:classes){
    main='Main'
    classpath sourceSets.main.runtimeClasspath
    classpath configurations.runtime
}

task fatJar(type:Jar){
    manifest{
        attributes('Main-Class':'Driver')
    }
    baseName = project.name + '-all'
    from{
        configurations.compile.collect{ it.isDirectory() ? it : zipTree(it) }
    }
    exclude ('META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA')
    with jar
}